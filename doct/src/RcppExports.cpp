// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// haz_func_gen
double haz_func_gen(double shape, double beta_s, double e_y, double alpha, double beta_alpha, double h0, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, double x, double t_r, arma::vec beta_l, double b_il3, int Ncov_l);
RcppExport SEXP _doct_haz_func_gen(SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP xSEXP, SEXP t_rSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(haz_func_gen(shape, beta_s, e_y, alpha, beta_alpha, h0, beta_sd, beta_sd_cum, di, tox, lambda_tox, x, t_r, beta_l, b_il3, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// test_haz
double test_haz(double shape, double beta_s, double e_y, double alpha, double beta_alpha, double h0, double ti, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, double t_r);
RcppExport SEXP _doct_test_haz(SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP tiSEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP t_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    rcpp_result_gen = Rcpp::wrap(test_haz(shape, beta_s, e_y, alpha, beta_alpha, h0, ti, beta_sd, beta_sd_cum, di, tox, lambda_tox, t_r));
    return rcpp_result_gen;
END_RCPP
}
// test_intensity
double test_intensity(double x, double mu, double beta_v11, double beta_v12, double alpha);
RcppExport SEXP _doct_test_intensity(SEXP xSEXP, SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(test_intensity(x, mu, beta_v11, beta_v12, alpha));
    return rcpp_result_gen;
END_RCPP
}
// integrate_intensity
double integrate_intensity(const double& mu, const double& beta_v11, const double& beta_v12, const double& alpha, const double& lower, const double& upper);
RcppExport SEXP _doct_integrate_intensity(SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP alphaSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const double& >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(integrate_intensity(mu, beta_v11, beta_v12, alpha, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// integrate_hazard
double integrate_hazard(const double& shape, const double& beta_s, const double& e_y, const double& alpha, const double& beta_alpha, const double& h0, const double& beta_sd, const double& beta_sd_cum, const double& di, const double& tox, const double& lambda_tox, const double& t_r, arma::vec beta_l, const double b_il3, const double& lower, const double& upper, int Ncov_l);
RcppExport SEXP _doct_integrate_hazard(SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP t_rSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< const double& >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< const double& >::type di(diSEXP);
    Rcpp::traits::input_parameter< const double& >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< const double& >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< const double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< const double& >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const double& >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(integrate_hazard(shape, beta_s, e_y, alpha, beta_alpha, h0, beta_sd, beta_sd_cum, di, tox, lambda_tox, t_r, beta_l, b_il3, lower, upper, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// loglike_surv_Rcpp
double loglike_surv_Rcpp(const double& shape, const double& beta_s, const double& beta_alpha, const double& h0, const double& beta_sd, const double& beta_sd_cum, arma::vec D, const double& lambda_tox, arma::vec inds_shrink_end, arma::vec end_inds, arma::vec EY, arma::vec alphas, arma::vec Ts, arma::vec Toxicity, arma::vec death_time, int Npat, int Nobs, arma::vec beta_l, arma::vec b_il3, int Ncov_l);
RcppExport SEXP _doct_loglike_surv_Rcpp(SEXP shapeSEXP, SEXP beta_sSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP DSEXP, SEXP lambda_toxSEXP, SEXP inds_shrink_endSEXP, SEXP end_indsSEXP, SEXP EYSEXP, SEXP alphasSEXP, SEXP TsSEXP, SEXP ToxicitySEXP, SEXP death_timeSEXP, SEXP NpatSEXP, SEXP NobsSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type inds_shrink_end(inds_shrink_endSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type end_inds(end_indsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type EY(EYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Toxicity(ToxicitySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type death_time(death_timeSEXP);
    Rcpp::traits::input_parameter< int >::type Npat(NpatSEXP);
    Rcpp::traits::input_parameter< int >::type Nobs(NobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(loglike_surv_Rcpp(shape, beta_s, beta_alpha, h0, beta_sd, beta_sd_cum, D, lambda_tox, inds_shrink_end, end_inds, EY, alphas, Ts, Toxicity, death_time, Npat, Nobs, beta_l, b_il3, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// loglike_surv_i_Rcpp
double loglike_surv_i_Rcpp(const double& shape, const double& beta_s, const double& beta_alpha, const double& h0, const double& beta_sd, const double& beta_sd_cum, arma::vec D, const double& lambda_tox, arma::vec EY, arma::vec alphas, arma::vec Ts, arma::vec Toxicity, double death_time, int Npat, int Nobs, arma::vec beta_l, double b_il3, int Ncov_l);
RcppExport SEXP _doct_loglike_surv_i_Rcpp(SEXP shapeSEXP, SEXP beta_sSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP DSEXP, SEXP lambda_toxSEXP, SEXP EYSEXP, SEXP alphasSEXP, SEXP TsSEXP, SEXP ToxicitySEXP, SEXP death_timeSEXP, SEXP NpatSEXP, SEXP NobsSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< const double& >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type EY(EYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Toxicity(ToxicitySEXP);
    Rcpp::traits::input_parameter< double >::type death_time(death_timeSEXP);
    Rcpp::traits::input_parameter< int >::type Npat(NpatSEXP);
    Rcpp::traits::input_parameter< int >::type Nobs(NobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(loglike_surv_i_Rcpp(shape, beta_s, beta_alpha, h0, beta_sd, beta_sd_cum, D, lambda_tox, EY, alphas, Ts, Toxicity, death_time, Npat, Nobs, beta_l, b_il3, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// test
arma::vec test(arma::mat y, arma::vec theta_a);
RcppExport SEXP _doct_test(SEXP ySEXP, SEXP theta_aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    rcpp_result_gen = Rcpp::wrap(test(y, theta_a));
    return rcpp_result_gen;
END_RCPP
}
// update_b_il
List update_b_il(arma::vec J_cumsum, arma::vec J, int Npat, arma::vec D, arma::vec Y, arma::vec Ts, arma::vec curr_mean_fixed, arma::vec censor, arma::vec Toxicity, arma::mat b_il, arma::vec death_time, arma::mat B, double sigma2_l, arma::vec curr_EY, arma::vec theta_a, double beta_s, double shape, double h0, double beta_alpha, double beta_sd, double beta_sd_cum, double lambda_tox, arma::vec beta_l, double k, int Ncov_l);
RcppExport SEXP _doct_update_b_il(SEXP J_cumsumSEXP, SEXP JSEXP, SEXP NpatSEXP, SEXP DSEXP, SEXP YSEXP, SEXP TsSEXP, SEXP curr_mean_fixedSEXP, SEXP censorSEXP, SEXP ToxicitySEXP, SEXP b_ilSEXP, SEXP death_timeSEXP, SEXP BSEXP, SEXP sigma2_lSEXP, SEXP curr_EYSEXP, SEXP theta_aSEXP, SEXP beta_sSEXP, SEXP shapeSEXP, SEXP h0SEXP, SEXP beta_alphaSEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP lambda_toxSEXP, SEXP beta_lSEXP, SEXP kSEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type J_cumsum(J_cumsumSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type Npat(NpatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type curr_mean_fixed(curr_mean_fixedSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type censor(censorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Toxicity(ToxicitySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b_il(b_ilSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type death_time(death_timeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_l(sigma2_lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type curr_EY(curr_EYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(update_b_il(J_cumsum, J, Npat, D, Y, Ts, curr_mean_fixed, censor, Toxicity, b_il, death_time, B, sigma2_l, curr_EY, theta_a, beta_s, shape, h0, beta_alpha, beta_sd, beta_sd_cum, lambda_tox, beta_l, k, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// CDF_intensity
double CDF_intensity(double mu, double beta_v11, double beta_v12, double alpha, double lower, double upper);
RcppExport SEXP _doct_CDF_intensity(SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP alphaSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(CDF_intensity(mu, beta_v11, beta_v12, alpha, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// intensity_cdf_func
double intensity_cdf_func(double upper, double mu, double beta_v11, double beta_v12, double alpha, double value);
RcppExport SEXP _doct_intensity_cdf_func(SEXP upperSEXP, SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP alphaSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(intensity_cdf_func(upper, mu, beta_v11, beta_v12, alpha, value));
    return rcpp_result_gen;
END_RCPP
}
// CDF_hazard
double CDF_hazard(double shape, double beta_s, double e_y, double alpha, double beta_alpha, double h0, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, double t_r, arma::vec beta_l, double b_il3, double lower, double upper, int Ncov_l);
RcppExport SEXP _doct_CDF_hazard(SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP t_rSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(CDF_hazard(shape, beta_s, e_y, alpha, beta_alpha, h0, beta_sd, beta_sd_cum, di, tox, lambda_tox, t_r, beta_l, b_il3, lower, upper, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// hazard_cdf_func
double hazard_cdf_func(double t_r, double upper, double shape, double beta_s, double e_y, double alpha, double beta_alpha, double h0, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, arma::vec beta_l, double b_il3, double value, int Ncov_l);
RcppExport SEXP _doct_hazard_cdf_func(SEXP t_rSEXP, SEXP upperSEXP, SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP valueSEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(hazard_cdf_func(t_r, upper, shape, beta_s, e_y, alpha, beta_alpha, h0, beta_sd, beta_sd_cum, di, tox, lambda_tox, beta_l, b_il3, value, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// cum_haz_func
double cum_haz_func(double t_r, double upper, double shape, double beta_s, double e_y, double alpha, double beta_alpha, double h0, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, arma::vec beta_l, double b_il3, double value, int Ncov_l);
RcppExport SEXP _doct_cum_haz_func(SEXP t_rSEXP, SEXP upperSEXP, SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP valueSEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(cum_haz_func(t_r, upper, shape, beta_s, e_y, alpha, beta_alpha, h0, beta_sd, beta_sd_cum, di, tox, lambda_tox, beta_l, b_il3, value, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// brents_fun_intensity
double brents_fun_intensity(double lower, double upper, double tol, unsigned int max_iter, double mu, double beta_v11, double beta_v12, double alpha, double value);
RcppExport SEXP _doct_brents_fun_intensity(SEXP lowerSEXP, SEXP upperSEXP, SEXP tolSEXP, SEXP max_iterSEXP, SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP alphaSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(brents_fun_intensity(lower, upper, tol, max_iter, mu, beta_v11, beta_v12, alpha, value));
    return rcpp_result_gen;
END_RCPP
}
// brents_fun_hazard
double brents_fun_hazard(double lower, double upper, double tol, unsigned int max_iter, double shape, double beta_s, double e_y, double alpha, double beta_alpha, double h0, double t_r, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, arma::vec beta_l, double b_il3, double value, int Ncov_l);
RcppExport SEXP _doct_brents_fun_hazard(SEXP lowerSEXP, SEXP upperSEXP, SEXP tolSEXP, SEXP max_iterSEXP, SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP t_rSEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP valueSEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(brents_fun_hazard(lower, upper, tol, max_iter, shape, beta_s, e_y, alpha, beta_alpha, h0, t_r, beta_sd, beta_sd_cum, di, tox, lambda_tox, beta_l, b_il3, value, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// brents_fun_cum_haz
double brents_fun_cum_haz(double lower, double upper, double tol, unsigned int max_iter, double shape, double beta_s, double e_y, double alpha, double beta_alpha, double h0, double t_r, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, arma::vec beta_l, double b_il3, double value, int Ncov_l);
RcppExport SEXP _doct_brents_fun_cum_haz(SEXP lowerSEXP, SEXP upperSEXP, SEXP tolSEXP, SEXP max_iterSEXP, SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP alphaSEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP t_rSEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP valueSEXP, SEXP Ncov_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    rcpp_result_gen = Rcpp::wrap(brents_fun_cum_haz(lower, upper, tol, max_iter, shape, beta_s, e_y, alpha, beta_alpha, h0, t_r, beta_sd, beta_sd_cum, di, tox, lambda_tox, beta_l, b_il3, value, Ncov_l));
    return rcpp_result_gen;
END_RCPP
}
// random_visit_times_Rcpp_test
double random_visit_times_Rcpp_test(double mu, double beta_v11, double beta_v12, double y_r, double t_r, arma::vec theta_a, double k);
RcppExport SEXP _doct_random_visit_times_Rcpp_test(SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP y_rSEXP, SEXP t_rSEXP, SEXP theta_aSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< double >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(random_visit_times_Rcpp_test(mu, beta_v11, beta_v12, y_r, t_r, theta_a, k));
    return rcpp_result_gen;
END_RCPP
}
// random_visit_times_Rcpp_test_fixed
double random_visit_times_Rcpp_test_fixed(double t_r, double n_days);
RcppExport SEXP _doct_random_visit_times_Rcpp_test_fixed(SEXP t_rSEXP, SEXP n_daysSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< double >::type n_days(n_daysSEXP);
    rcpp_result_gen = Rcpp::wrap(random_visit_times_Rcpp_test_fixed(t_r, n_days));
    return rcpp_result_gen;
END_RCPP
}
// toxicity_calc_RCpp
double toxicity_calc_RCpp(double d_i, double t_i, double t_r, double lambda_tox, double tox_recent);
RcppExport SEXP _doct_toxicity_calc_RCpp(SEXP d_iSEXP, SEXP t_iSEXP, SEXP t_rSEXP, SEXP lambda_toxSEXP, SEXP tox_recentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type d_i(d_iSEXP);
    Rcpp::traits::input_parameter< double >::type t_i(t_iSEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< double >::type tox_recent(tox_recentSEXP);
    rcpp_result_gen = Rcpp::wrap(toxicity_calc_RCpp(d_i, t_i, t_r, lambda_tox, tox_recent));
    return rcpp_result_gen;
END_RCPP
}
// random_hazard_times_Rcpp_test_exp
List random_hazard_times_Rcpp_test_exp(double t_max, double shape, double beta_s, double e_y, double beta_alpha, double h0, arma::vec theta_a, double y_r, double t_r, double beta_sd, double beta_sd_cum, double di, double tox, double lambda_tox, double cum_haz_prev, arma::vec beta_l, double b_il3, int Ncov_l, double k);
RcppExport SEXP _doct_random_hazard_times_Rcpp_test_exp(SEXP t_maxSEXP, SEXP shapeSEXP, SEXP beta_sSEXP, SEXP e_ySEXP, SEXP beta_alphaSEXP, SEXP h0SEXP, SEXP theta_aSEXP, SEXP y_rSEXP, SEXP t_rSEXP, SEXP beta_sdSEXP, SEXP beta_sd_cumSEXP, SEXP diSEXP, SEXP toxSEXP, SEXP lambda_toxSEXP, SEXP cum_haz_prevSEXP, SEXP beta_lSEXP, SEXP b_il3SEXP, SEXP Ncov_lSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< double >::type e_y(e_ySEXP);
    Rcpp::traits::input_parameter< double >::type beta_alpha(beta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    Rcpp::traits::input_parameter< double >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< double >::type t_r(t_rSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd(beta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sd_cum(beta_sd_cumSEXP);
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type tox(toxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_tox(lambda_toxSEXP);
    Rcpp::traits::input_parameter< double >::type cum_haz_prev(cum_haz_prevSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_l(beta_lSEXP);
    Rcpp::traits::input_parameter< double >::type b_il3(b_il3SEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(random_hazard_times_Rcpp_test_exp(t_max, shape, beta_s, e_y, beta_alpha, h0, theta_a, y_r, t_r, beta_sd, beta_sd_cum, di, tox, lambda_tox, cum_haz_prev, beta_l, b_il3, Ncov_l, k));
    return rcpp_result_gen;
END_RCPP
}
// mvrnormArma
arma::mat mvrnormArma(int n, arma::vec mu, arma::mat sigma);
RcppExport SEXP _doct_mvrnormArma(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mvrnormArma(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// mvrnormArma_single
arma::vec mvrnormArma_single(arma::vec mu, arma::mat sigma);
RcppExport SEXP _doct_mvrnormArma_single(SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mvrnormArma_single(mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// integrate_grad_betav2_Rcpp
double integrate_grad_betav2_Rcpp(const double& y_r, const double& beta_v11, const double& beta_v12, arma::vec theta_a, double k, const double& lower, const double& upper);
RcppExport SEXP _doct_integrate_grad_betav2_Rcpp(SEXP y_rSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP theta_aSEXP, SEXP kSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< const double& >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const double& >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(integrate_grad_betav2_Rcpp(y_r, beta_v11, beta_v12, theta_a, k, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// function_grad_betav2_Rcpp
double function_grad_betav2_Rcpp(const double& y_r, const double& beta_v11, const double& beta_v12, arma::vec theta_a, double k, const double& val);
RcppExport SEXP _doct_function_grad_betav2_Rcpp(SEXP y_rSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP theta_aSEXP, SEXP kSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< const double& >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(function_grad_betav2_Rcpp(y_r, beta_v11, beta_v12, theta_a, k, val));
    return rcpp_result_gen;
END_RCPP
}
// beta_v2_grad_Rcpp
double beta_v2_grad_Rcpp(arma::vec J_cumsum, arma::vec J_cumsum_t, arma::vec J, int Npat, arma::vec Y, arma::vec Ts, double beta_v11, double beta_v12, double mu, arma::mat theta_as, arma::vec ks, arma::vec rewards);
RcppExport SEXP _doct_beta_v2_grad_Rcpp(SEXP J_cumsumSEXP, SEXP J_cumsum_tSEXP, SEXP JSEXP, SEXP NpatSEXP, SEXP YSEXP, SEXP TsSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP muSEXP, SEXP theta_asSEXP, SEXP ksSEXP, SEXP rewardsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type J_cumsum(J_cumsumSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type J_cumsum_t(J_cumsum_tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type Npat(NpatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_as(theta_asSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ks(ksSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rewards(rewardsSEXP);
    rcpp_result_gen = Rcpp::wrap(beta_v2_grad_Rcpp(J_cumsum, J_cumsum_t, J, Npat, Y, Ts, beta_v11, beta_v12, mu, theta_as, ks, rewards));
    return rcpp_result_gen;
END_RCPP
}
// integrate_grad_betav1_Rcpp
double integrate_grad_betav1_Rcpp(const double& y_r, const double& beta_v11, const double& beta_v12, arma::vec theta_a, double k, const double& lower, const double& upper);
RcppExport SEXP _doct_integrate_grad_betav1_Rcpp(SEXP y_rSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP theta_aSEXP, SEXP kSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< const double& >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const double& >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(integrate_grad_betav1_Rcpp(y_r, beta_v11, beta_v12, theta_a, k, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// function_grad_betav1_Rcpp
double function_grad_betav1_Rcpp(const double& y_r, const double& beta_v11, const double& beta_v12, arma::vec theta_a, double k, const double& val);
RcppExport SEXP _doct_function_grad_betav1_Rcpp(SEXP y_rSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP theta_aSEXP, SEXP kSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_a(theta_aSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< const double& >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(function_grad_betav1_Rcpp(y_r, beta_v11, beta_v12, theta_a, k, val));
    return rcpp_result_gen;
END_RCPP
}
// beta_v1_grad_Rcpp
double beta_v1_grad_Rcpp(arma::vec J_cumsum, arma::vec J_cumsum_t, arma::vec J, int Npat, arma::vec Y, arma::vec Ts, double beta_v11, double beta_v12, double mu, arma::mat theta_as, arma::vec ks, arma::vec rewards);
RcppExport SEXP _doct_beta_v1_grad_Rcpp(SEXP J_cumsumSEXP, SEXP J_cumsum_tSEXP, SEXP JSEXP, SEXP NpatSEXP, SEXP YSEXP, SEXP TsSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP muSEXP, SEXP theta_asSEXP, SEXP ksSEXP, SEXP rewardsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type J_cumsum(J_cumsumSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type J_cumsum_t(J_cumsum_tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type Npat(NpatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_as(theta_asSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ks(ksSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rewards(rewardsSEXP);
    rcpp_result_gen = Rcpp::wrap(beta_v1_grad_Rcpp(J_cumsum, J_cumsum_t, J, Npat, Y, Ts, beta_v11, beta_v12, mu, theta_as, ks, rewards));
    return rcpp_result_gen;
END_RCPP
}
// Data_Simu_Rcpp_single_pat_age_dgf
Rcpp::List Data_Simu_Rcpp_single_pat_age_dgf(arma::mat beta_ls, arma::cube Bs, arma::vec sigma2_ls, arma::vec beta_ss, arma::vec beta_sds, arma::vec beta_sd_cums, arma::vec lambda_toxs, arma::vec h0s, arma::vec beta_alphas, arma::vec shapes, int Npat, arma::vec beta_d, arma::vec sigma2_ds, double mu, double beta_v11, double beta_v12, arma::mat theta_as, double beta_reward, arma::mat b_ils, arma::vec ks, arma::vec cov_in, double mean_y_init, int Ncov_l, int Ncov_d, arma::vec dosage_bounds);
RcppExport SEXP _doct_Data_Simu_Rcpp_single_pat_age_dgf(SEXP beta_lsSEXP, SEXP BsSEXP, SEXP sigma2_lsSEXP, SEXP beta_ssSEXP, SEXP beta_sdsSEXP, SEXP beta_sd_cumsSEXP, SEXP lambda_toxsSEXP, SEXP h0sSEXP, SEXP beta_alphasSEXP, SEXP shapesSEXP, SEXP NpatSEXP, SEXP beta_dSEXP, SEXP sigma2_dsSEXP, SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP theta_asSEXP, SEXP beta_rewardSEXP, SEXP b_ilsSEXP, SEXP ksSEXP, SEXP cov_inSEXP, SEXP mean_y_initSEXP, SEXP Ncov_lSEXP, SEXP Ncov_dSEXP, SEXP dosage_boundsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type beta_ls(beta_lsSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Bs(BsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma2_ls(sigma2_lsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_ss(beta_ssSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_sds(beta_sdsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_sd_cums(beta_sd_cumsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda_toxs(lambda_toxsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type h0s(h0sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_alphas(beta_alphasSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type shapes(shapesSEXP);
    Rcpp::traits::input_parameter< int >::type Npat(NpatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_d(beta_dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma2_ds(sigma2_dsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_as(theta_asSEXP);
    Rcpp::traits::input_parameter< double >::type beta_reward(beta_rewardSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b_ils(b_ilsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ks(ksSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cov_in(cov_inSEXP);
    Rcpp::traits::input_parameter< double >::type mean_y_init(mean_y_initSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_d(Ncov_dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dosage_bounds(dosage_boundsSEXP);
    rcpp_result_gen = Rcpp::wrap(Data_Simu_Rcpp_single_pat_age_dgf(beta_ls, Bs, sigma2_ls, beta_ss, beta_sds, beta_sd_cums, lambda_toxs, h0s, beta_alphas, shapes, Npat, beta_d, sigma2_ds, mu, beta_v11, beta_v12, theta_as, beta_reward, b_ils, ks, cov_in, mean_y_init, Ncov_l, Ncov_d, dosage_bounds));
    return rcpp_result_gen;
END_RCPP
}
// Data_Simu_Rcpp_single_pat_fixed_visits
Rcpp::List Data_Simu_Rcpp_single_pat_fixed_visits(arma::mat beta_ls, arma::cube Bs, arma::vec sigma2_ls, arma::vec beta_ss, arma::vec beta_sds, arma::vec beta_sd_cums, arma::vec lambda_toxs, arma::vec h0s, arma::vec beta_alphas, arma::vec shapes, int Npat, arma::vec beta_d, arma::vec sigma2_ds, double mu, double beta_v11, double beta_v12, arma::mat theta_as, double beta_reward, arma::mat b_ils, arma::vec ks, arma::vec cov_in, double mean_y_init, int Ncov_l, int Ncov_d, arma::vec dosage_bounds, double n_days);
RcppExport SEXP _doct_Data_Simu_Rcpp_single_pat_fixed_visits(SEXP beta_lsSEXP, SEXP BsSEXP, SEXP sigma2_lsSEXP, SEXP beta_ssSEXP, SEXP beta_sdsSEXP, SEXP beta_sd_cumsSEXP, SEXP lambda_toxsSEXP, SEXP h0sSEXP, SEXP beta_alphasSEXP, SEXP shapesSEXP, SEXP NpatSEXP, SEXP beta_dSEXP, SEXP sigma2_dsSEXP, SEXP muSEXP, SEXP beta_v11SEXP, SEXP beta_v12SEXP, SEXP theta_asSEXP, SEXP beta_rewardSEXP, SEXP b_ilsSEXP, SEXP ksSEXP, SEXP cov_inSEXP, SEXP mean_y_initSEXP, SEXP Ncov_lSEXP, SEXP Ncov_dSEXP, SEXP dosage_boundsSEXP, SEXP n_daysSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type beta_ls(beta_lsSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Bs(BsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma2_ls(sigma2_lsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_ss(beta_ssSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_sds(beta_sdsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_sd_cums(beta_sd_cumsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda_toxs(lambda_toxsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type h0s(h0sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_alphas(beta_alphasSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type shapes(shapesSEXP);
    Rcpp::traits::input_parameter< int >::type Npat(NpatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_d(beta_dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma2_ds(sigma2_dsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_v11(beta_v11SEXP);
    Rcpp::traits::input_parameter< double >::type beta_v12(beta_v12SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_as(theta_asSEXP);
    Rcpp::traits::input_parameter< double >::type beta_reward(beta_rewardSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b_ils(b_ilsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ks(ksSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cov_in(cov_inSEXP);
    Rcpp::traits::input_parameter< double >::type mean_y_init(mean_y_initSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_l(Ncov_lSEXP);
    Rcpp::traits::input_parameter< int >::type Ncov_d(Ncov_dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dosage_bounds(dosage_boundsSEXP);
    Rcpp::traits::input_parameter< double >::type n_days(n_daysSEXP);
    rcpp_result_gen = Rcpp::wrap(Data_Simu_Rcpp_single_pat_fixed_visits(beta_ls, Bs, sigma2_ls, beta_ss, beta_sds, beta_sd_cums, lambda_toxs, h0s, beta_alphas, shapes, Npat, beta_d, sigma2_ds, mu, beta_v11, beta_v12, theta_as, beta_reward, b_ils, ks, cov_in, mean_y_init, Ncov_l, Ncov_d, dosage_bounds, n_days));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_doct_haz_func_gen", (DL_FUNC) &_doct_haz_func_gen, 16},
    {"_doct_test_haz", (DL_FUNC) &_doct_test_haz, 13},
    {"_doct_test_intensity", (DL_FUNC) &_doct_test_intensity, 5},
    {"_doct_integrate_intensity", (DL_FUNC) &_doct_integrate_intensity, 6},
    {"_doct_integrate_hazard", (DL_FUNC) &_doct_integrate_hazard, 17},
    {"_doct_loglike_surv_Rcpp", (DL_FUNC) &_doct_loglike_surv_Rcpp, 20},
    {"_doct_loglike_surv_i_Rcpp", (DL_FUNC) &_doct_loglike_surv_i_Rcpp, 18},
    {"_doct_test", (DL_FUNC) &_doct_test, 2},
    {"_doct_update_b_il", (DL_FUNC) &_doct_update_b_il, 25},
    {"_doct_CDF_intensity", (DL_FUNC) &_doct_CDF_intensity, 6},
    {"_doct_intensity_cdf_func", (DL_FUNC) &_doct_intensity_cdf_func, 6},
    {"_doct_CDF_hazard", (DL_FUNC) &_doct_CDF_hazard, 17},
    {"_doct_hazard_cdf_func", (DL_FUNC) &_doct_hazard_cdf_func, 17},
    {"_doct_cum_haz_func", (DL_FUNC) &_doct_cum_haz_func, 17},
    {"_doct_brents_fun_intensity", (DL_FUNC) &_doct_brents_fun_intensity, 9},
    {"_doct_brents_fun_hazard", (DL_FUNC) &_doct_brents_fun_hazard, 20},
    {"_doct_brents_fun_cum_haz", (DL_FUNC) &_doct_brents_fun_cum_haz, 20},
    {"_doct_random_visit_times_Rcpp_test", (DL_FUNC) &_doct_random_visit_times_Rcpp_test, 7},
    {"_doct_random_visit_times_Rcpp_test_fixed", (DL_FUNC) &_doct_random_visit_times_Rcpp_test_fixed, 2},
    {"_doct_toxicity_calc_RCpp", (DL_FUNC) &_doct_toxicity_calc_RCpp, 5},
    {"_doct_random_hazard_times_Rcpp_test_exp", (DL_FUNC) &_doct_random_hazard_times_Rcpp_test_exp, 19},
    {"_doct_mvrnormArma", (DL_FUNC) &_doct_mvrnormArma, 3},
    {"_doct_mvrnormArma_single", (DL_FUNC) &_doct_mvrnormArma_single, 2},
    {"_doct_integrate_grad_betav2_Rcpp", (DL_FUNC) &_doct_integrate_grad_betav2_Rcpp, 7},
    {"_doct_function_grad_betav2_Rcpp", (DL_FUNC) &_doct_function_grad_betav2_Rcpp, 6},
    {"_doct_beta_v2_grad_Rcpp", (DL_FUNC) &_doct_beta_v2_grad_Rcpp, 12},
    {"_doct_integrate_grad_betav1_Rcpp", (DL_FUNC) &_doct_integrate_grad_betav1_Rcpp, 7},
    {"_doct_function_grad_betav1_Rcpp", (DL_FUNC) &_doct_function_grad_betav1_Rcpp, 6},
    {"_doct_beta_v1_grad_Rcpp", (DL_FUNC) &_doct_beta_v1_grad_Rcpp, 12},
    {"_doct_Data_Simu_Rcpp_single_pat_age_dgf", (DL_FUNC) &_doct_Data_Simu_Rcpp_single_pat_age_dgf, 25},
    {"_doct_Data_Simu_Rcpp_single_pat_fixed_visits", (DL_FUNC) &_doct_Data_Simu_Rcpp_single_pat_fixed_visits, 26},
    {NULL, NULL, 0}
};

RcppExport void R_init_doct(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
